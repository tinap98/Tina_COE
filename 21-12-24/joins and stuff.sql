

1. Identify which salesperson has generated the highest total sales.
2. Count how many customers are handled by each salesperson.
3. Find out which customers have placed the most orders.
4. Analyze the average size of orders for each salespersons customers.
5. Identify the customers who have spent the most money on orders.
6. Analyze which cities (regions) generate the highest total sales.
7. Find out which salesperson has the highest average customer rating.
8. Calculate the percentage of customers who have placed orders for each salesperson.
9. Calculate the total revenue generated by each customer.
10. Identify customers who have not placed any orders.
11. Show the percentage of total revenue generated by each salesperson.





mysql> SELECT salespeople.sname, SUM(orders.amt) AS total_sales
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY salespeople.snum
    -> ORDER BY total_sales DESC
    -> LIMIT 1;
+-------+-------------+
| sname | total_sales |
+-------+-------------+
| Peel  |    15382.07 |
+-------+-------------+
1 row in set (0.00 sec)

mysql> SELECT salespeople.sname, COUNT(DISTINCT customer.cnum) AS customer_count
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> GROUP BY salespeople.snum;
+---------+----------------+
| sname   | customer_count |
+---------+----------------+
| Peel    |              2 |
| Serres  |              2 |
| AxelRod |              1 |
| Motika  |              1 |
| Rifkin  |              1 |
+---------+----------------+
5 rows in set (0.00 sec)

mysql> SELECT customer.cname, COUNT(orders.onum) AS order_count
    -> FROM customer
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY customer.cnum
    -> ORDER BY order_count DESC
    -> LIMIT 1;
+---------+-------------+
| cname   | order_count |
+---------+-------------+
| Clemens |           2 |
+---------+-------------+
1 row in set (0.00 sec)

mysql> SELECT salespeople.sname, AVG(orders.amt) AS avg_order_size
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY salespeople.snum;
+---------+----------------+
| sname   | avg_order_size |
+---------+----------------+
| Peel    |    5127.356667 |
| Serres  |    3235.200000 |
| AxelRod |     894.490000 |
| Motika  |    1900.100000 |
| Rifkin  |     558.425000 |
+---------+----------------+
5 rows in set (0.00 sec)

mysql> SELECT customer.cname, SUM(orders.amt) AS total_spent
    -> FROM customer
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY customer.cnum
    -> ORDER BY total_spent DESC
    -> LIMIT 1;
+---------+-------------+
| cname   | total_spent |
+---------+-------------+
| Clemens |    14614.88 |
+---------+-------------+
1 row in set (0.00 sec)

mysql> SELECT customer.city, SUM(orders.amt) AS total_sales
    -> FROM customer
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY customer.city
    -> ORDER BY total_sales DESC
    -> LIMIT 1;
+--------+-------------+
| city   | total_sales |
+--------+-------------+
| London |    15382.07 |
+--------+-------------+
1 row in set (0.00 sec)

mysql> SELECT salespeople.sname, AVG(customer.rating) AS avg_rating
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> GROUP BY salespeople.snum
    -> ORDER BY avg_rating DESC
    -> LIMIT 1;
+--------+------------+
| sname  | avg_rating |
+--------+------------+
| Rifkin |   300.0000 |
+--------+------------+
1 row in set (0.00 sec)

mysql> SELECT salespeople.sname,
    ->        (COUNT(DISTINCT orders.onum) / COUNT(DISTINCT customer.cnum)) * 100 AS order_percentage
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> LEFT JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY salespeople.snum;
+---------+------------------+
| sname   | order_percentage |
+---------+------------------+
| Peel    |         150.0000 |
| Serres  |         100.0000 |
| AxelRod |         200.0000 |
| Motika  |         100.0000 |
| Rifkin  |         200.0000 |
+---------+------------------+
5 rows in set (0.00 sec)

mysql> SELECT customer.cname, SUM(orders.amt) AS total_revenue
    -> FROM customer
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY customer.cnum;
+----------+---------------+
| cname    | total_revenue |
+----------+---------------+
| Hoffman  |        767.19 |
| Giovanni |       1788.98 |
| Liu      |       5160.45 |
| Grass    |       1309.95 |
| Clemens  |      14614.88 |
| Pereira  |       1900.10 |
| Cisneros |       1116.85 |
+----------+---------------+
7 rows in set (0.00 sec)

mysql> SELECT customer.cname
    -> FROM customer
    -> LEFT JOIN orders ON customer.cnum = orders.cnum
    -> WHERE orders.onum IS NULL;
Empty set (0.00 sec)

mysql> SELECT salespeople.sname,
    ->        (SUM(orders.amt) / (SELECT SUM(amt) FROM orders)) * 100 AS revenue_percentage
    -> FROM salespeople
    -> JOIN customer ON salespeople.snum = customer.snum
    -> JOIN orders ON customer.cnum = orders.cnum
    -> GROUP BY salespeople.snum;
+---------+--------------------+
| sname   | revenue_percentage |
+---------+--------------------+
| Peel    |          57.700650 |
| Serres  |          24.271524 |
| AxelRod |           6.710755 |
| Motika  |           7.127585 |
| Rifkin  |           4.189486 |
+---------+--------------------+
5 rows in set (0.00 sec)
